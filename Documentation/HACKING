This file contains general guidelines for hacking on this driver. More
specific information is available in other files in Documentation/

Repository
==========

Our source code is stored on github at

http://github.com/andrewsw/expose-teensy

There is also a sporadically maintained mirror at

http://git.swclan.homelinux.org/expose-teensy.git

Branches
--------

* master -- mainline development

So far any other branches have been short-lived and are not of general interest.

Git Cheat Sheet
---------------

* create and change to local reader branch tracking global reader branch: `git checkout --track -b reader origin/reader`
* create and change to a local branch (no tracking): `git checkout -b <branch>`
* change to a different branch: `git checkout <branch>`
* show list of branches: `git branch -av`
* make git use color when sensible: `git config --global color.ui auto`
* merge <branch> with reader: `git checkout reader; git merge <branch>`
* show a graphical summary of all history and refs: `git log --graph --all --pretty=oneline --decorate --abbrev-commit`
* tag a commit, with an annotation: `git tag -a <tag name> <commit> -m <annotation>`
* look at a file as it existed in a particular commit or tag: e.g. `git show skeletal-adc-submodule:usb_driver/teensy_adc.c`
  note the *full* path usb_driver/teensy_adc.c.
* stage only part of a file: `git add --patch <some file>`
  now follow the prompts to add particular changes.
* delete a remote branch: `git push origin :<branch to delete>`
* view the *staged* changes: `git diff --cached`


Code
----

The code is written in C for the kernel module and the device code
that runs on the teensy itself. At this time, the demo code is also
written in C, but does not necessarily need to be.

Contributing
------------

Contributions are gratefully accepted so long as the fit within our
general plan (see ARCHITECTURE). If you think you have something good,
please send it along. If we think it doesn't fit, we'll talk to you
about it. We are totally prepared to be wrong! :)

Demo code of just about any kind will also be gratefully
accepted. Send us your cool applications! If you are doing anything
that requires hooking up funky hardware, a schematic and list of parts
would be helpful too.
